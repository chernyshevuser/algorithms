--УСЛОВИЕ ЗАДАЧИ--
 Дан текст T и набор строк s_1, ... ,s_n. Необходимо определить, представим
 ли T как комбинация непересекающихся строк s_i_1, ... , s_i_k. Индексы
 могут повторяться. Строка s_i может встречаться в разбиении текста T
 произвольное число раз. Можно использовать не все строки для разбиения.
 Строки могут идти в любом порядке.

--ИДЕЯ РЕШЕНИЯ--
 Исходный текст считывается, и по нему строится массив префиксных хешей.
 Затем все слова считываются и запоминаются их хеши. Для решения задачи
 используется одномерная динамика: dp[i] отвечает на вопрос - можно ли
 покрыть строку [0, ..., i] словами из словаря. Изначально dp[0] = True.
 Для получения dp[i] перебираются все длины из словаря <= i,
 и ищется совпадение. Если совпадение найдено, dp[i] будет равно
 dp[i - длина словарного слова]. Конечный ответ будет находиться в
 последней ячейке массива

--АЛГОРИТМИЧЕСКАЯ СЛОЖНОСТЬ--
 Пусть n - количество словарных слов, k - длина проверяемого текста,
 m - длина словарного слова.
 Подсчет префиксных хешей проверяемого текста тратит O(k)
 Подсчет хешей всех словарных слов тратит O(n * m * log(n))
 Заполнение dp тратит O(k * n * log(n))
 Таким образом, общая алгоритмическая сложность -
 O(max(n * k * log(n), n * m * log(n))) = O(n * k * log(n))

--ПРОСТРАНСТВЕННАЯ СЛОЖНОСТЬ--
 Хранение префиксных хешей текста - O(k)
 хранение хешей словарных слов - O(n)
 хранение dp - O(k)
 Таким образом, общая пространственная сложность составляет O(n + k)
